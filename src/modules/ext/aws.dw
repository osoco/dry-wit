# mod: aws.dw
# api: public
# txt: AWS functions

# fun: retrieve_aws_cli_from_profile_and_region awsProfile awsRegion
# api: public
# txt: Retrieves the AWS command-line.
# opt: awsProfile: The AWS profile.
# opt: awsRegion: The AWS region.
# txt: Returns 0/TRUE if the AWS CLI could be retrieved; 1/FALSE otherwise.
# txt: If the function returns 0/TRUE, the variable RESULT contains the path and common flags for AWS CLI.
# use: if retrieve_aws_cli_from_profile_and_region "contestia-dev" "us-east-1"; then echo "AWS CLI -> ${RESULT}"; fi
function retrieve_aws_cli_from_profile_and_region () {
  local _awsProfile="${1}";
  checkNotEmpty awsProfile "${_awsProfile}" 1;
  local _awsRegion="${2}";
  checkNotEmpty awsRegion "${_awsRegion}" 2;
  local -i _rescode;

  local _result="$(which aws) --profile ${_awsProfile} --region ${_awsRegion}";
  _rescode=$?;

  if isTrue ${_rescode}; then
    export RESULT="${_result}";
  fi

  return ${_rescode};
}

# fun: is_cloudformation_template_valid template stack environment
# api: public
# txt: Validates the CloudFormation template.
# opt: template: The template file.
# opt: awsCli: The specific way to run AWS CLI.
# txt: Returns 0/${TRUE} if the template is correct; 1/${FALSE} otherwise.
# use: if is_cloudformation_template_valid "my-template.json" "aws --profile dev"; then echo "my-template.json is correct"; fi
function is_cloudformation_template_valid() {
  local _template="${1}";
  checkNotEmpty template "${_template}" 1;
  local _awsCli="${2}";
  checkNotEmpty awsCli "${_awsCli}" 2;
  local -i _rescode;
  local _awsCli;
  local _output;

  logDebug -n "Checking CloudFormation template ${_template}";
  logTrace "${_awsCli} cloudformation validate-template --template-body file://${_template}";
  _output="$(${_awsCli} cloudformation validate-template --template-body file://"${_template}" 2>&1)";
  _rescode=$?;
  if isTrue ${_rescode}; then
    logDebugResult SUCCESS "valid";
  else
    logDebugResult FAILURE "invalid";
    logDebug "${_output}";
    exitWithErrorCode INVALID_CLOUDFORMATION_TEMPLATE "${_template}";
  fi

  return ${_rescode};
}
# vim: syntax=sh ts=2 sw=2 sts=4 sr noet
